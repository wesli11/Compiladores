
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDIFWHILErightVARrigthASIGNACIONleftDISTINTOleftMAYORMENORleftPLUSleftPARENTESIS_ABPARENTESIS_CEleftLLAVE_ABIERTALLAVE_CERRADAID NUMERO CADENA_CARACTERES PLUS MAYOR MENOR NEGACION PARENTESIS_AB PARENTESIS_CE CONSTANTE_ENTERA DISTINTO COMENTARIOS AND AUTO_DECREMENTO PUNTO COMA PUNTO_Y_COMA MENOS ASIGNACION LLAVE_ABIERTA LLAVE_CERRADA DOS_PUNTOS AUTO_INC AUTO_DEC TIPO WRITE FUNCTION WHILE PROMPT INT VAR RETURN CHARS BOOL IFprogram : blockblock : D_de decFun Sprima emptya_A : t_tipos ID COMA a_Aa_A : t_tipos IDa_A : t_tipos ID PUNTO_Y_COMAa_A : emptyD_de :  VAR t_tipos ID j_J PUNTO_Y_COMAj_J : COMA ID j_Jj_J : emptydecFun : FUNCTION decTipos ID PARENTESIS_AB a_A PARENTESIS_CE LLAVE_ABIERTA Sprima LLAVE_CERRADAdecTipos : t_tiposdecTipos : emptyt_tipos : INTt_tipos : BOOLt_tipos : CHARSSprima : WHILE PARENTESIS_AB E PARENTESIS_CE LLAVE_ABIERTA sesese LLAVE_CERRADASprima : sesesesesese : ID ASIGNACION E PUNTO_Y_COMAsesese : ID ASIGNACION Esesese : IF PARENTESIS_AB E PARENTESIS_CEsesese : RETURN E PUNTO_Y_COMAsesese : WRITE PARENTESIS_AB B PARENTESIS_CE PUNTO_Y_COMAsesese : PROMPT PARENTESIS_AB ID PARENTESIS_CE PUNTO_Y_COMAE : E PLUS variableE : E MENOS variableE : E MENOR variableE : E MAYOR variablevariable : IDvariable : NUMEROE : variablet_tipos : t_tipos AND YY : EY : E COMA YY : emptyY : AUTO_INC YprimaYprima : IDYprima : ID PARENTESIS_AB B PARENTESIS_CEB : E B : E COMA BB : emptyempty :'
    
_lr_action_items = {'RETURN':([6,81,85,91,],[19,19,19,-10,]),'VAR':([0,],[4,]),'WHILE':([6,85,91,],[17,17,-10,]),'PUNTO_Y_COMA':([23,29,30,31,32,39,41,53,59,63,64,67,68,69,70,75,76,],[-41,52,-29,-30,-28,58,-9,71,-41,78,79,-27,-26,-25,-24,-8,84,]),'ASIGNACION':([20,],[33,]),'LLAVE_CERRADA':([15,30,31,32,52,53,67,68,69,70,71,72,78,79,86,89,90,],[-17,-29,-30,-28,-21,-19,-27,-26,-25,-24,-18,-20,-23,-22,90,91,-16,]),'PLUS':([29,30,31,32,35,45,47,53,54,67,68,69,70,],[51,-29,-30,-28,51,51,51,51,51,-27,-26,-25,-24,]),'LLAVE_ABIERTA':([66,77,],[81,85,]),'MAYOR':([29,30,31,32,35,45,47,53,54,67,68,69,70,],[48,-29,-30,-28,48,48,48,48,48,-27,-26,-25,-24,]),'$end':([2,3,15,18,28,30,31,32,52,53,67,68,69,70,71,72,78,79,90,],[0,-1,-17,-41,-2,-29,-30,-28,-21,-19,-27,-26,-25,-24,-18,-20,-23,-22,-16,]),'FUNCTION':([1,58,],[5,-7,]),'PROMPT':([6,81,85,91,],[14,14,14,-10,]),'AUTO_INC':([22,55,],[36,36,]),'NUMERO':([19,22,26,27,33,34,48,49,50,51,55,65,74,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'WRITE':([6,81,85,91,],[16,16,16,-10,]),'COMA':([23,30,31,32,35,45,59,67,68,69,70,76,],[40,-29,-30,-28,55,65,40,-27,-26,-25,-24,83,]),'ID':([5,6,7,8,9,10,11,12,13,19,22,25,26,27,30,31,32,33,34,35,36,37,38,40,48,49,50,51,55,56,57,60,65,67,68,69,70,73,74,81,85,87,91,],[-41,20,-15,23,-13,-14,-11,24,-12,32,32,43,32,32,-29,-30,-28,32,32,-32,57,-31,-34,59,32,32,32,32,32,-35,-36,76,32,-27,-26,-25,-24,-33,32,20,20,-37,-10,]),'IF':([6,81,85,91,],[21,21,21,-10,]),'AND':([7,8,9,10,11,22,30,31,32,35,37,38,55,56,57,60,67,68,69,70,73,87,],[-15,22,-13,-14,22,-41,-29,-30,-28,-32,-31,-34,-41,-35,-36,22,-27,-26,-25,-24,-33,-37,]),'PARENTESIS_CE':([26,30,31,32,42,43,44,45,46,47,54,61,62,65,67,68,69,70,74,76,80,82,83,84,88,],[-41,-29,-30,-28,-41,63,64,-38,-40,66,72,77,-6,-41,-27,-26,-25,-24,-41,-4,-39,87,-41,-5,-3,]),'PARENTESIS_AB':([14,16,17,21,24,57,],[25,26,27,34,42,74,]),'INT':([4,5,42,83,],[9,9,9,9,]),'CHARS':([4,5,42,83,],[7,7,7,7,]),'MENOR':([29,30,31,32,35,45,47,53,54,67,68,69,70,],[49,-29,-30,-28,49,49,49,49,49,-27,-26,-25,-24,]),'MENOS':([29,30,31,32,35,45,47,53,54,67,68,69,70,],[50,-29,-30,-28,50,50,50,50,50,-27,-26,-25,-24,]),'BOOL':([4,5,42,83,],[10,10,10,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Yprima':([36,],[56,]),'B':([26,65,74,],[44,80,82,]),'E':([19,22,26,27,33,34,55,65,74,],[29,35,45,47,53,54,35,45,45,]),'Sprima':([6,85,],[18,89,]),'t_tipos':([4,5,42,83,],[8,11,60,60,]),'sesese':([6,81,85,],[15,86,15,]),'empty':([5,18,22,23,26,42,55,59,65,74,83,],[13,28,38,41,46,62,38,41,46,46,62,]),'Y':([22,55,],[37,73,]),'program':([0,],[2,]),'a_A':([42,83,],[61,88,]),'decTipos':([5,],[12,]),'D_de':([0,],[1,]),'variable':([19,22,26,27,33,34,48,49,50,51,55,65,74,],[31,31,31,31,31,31,67,68,69,70,31,31,31,]),'j_J':([23,59,],[39,75,]),'block':([0,],[3,]),'decFun':([1,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','SintacticoPrueba.py',22),
  ('block -> D_de decFun Sprima empty','block',4,'p_block','SintacticoPrueba.py',27),
  ('a_A -> t_tipos ID COMA a_A','a_A',4,'p_varDecl1','SintacticoPrueba.py',32),
  ('a_A -> t_tipos ID','a_A',2,'p_varDecl2','SintacticoPrueba.py',37),
  ('a_A -> t_tipos ID PUNTO_Y_COMA','a_A',3,'p_varDecl4','SintacticoPrueba.py',42),
  ('a_A -> empty','a_A',1,'p_varDecl3','SintacticoPrueba.py',47),
  ('D_de -> VAR t_tipos ID j_J PUNTO_Y_COMA','D_de',5,'p_varDeclSen1','SintacticoPrueba.py',53),
  ('j_J -> COMA ID j_J','j_J',3,'p_J1','SintacticoPrueba.py',59),
  ('j_J -> empty','j_J',1,'p_J2','SintacticoPrueba.py',64),
  ('decFun -> FUNCTION decTipos ID PARENTESIS_AB a_A PARENTESIS_CE LLAVE_ABIERTA Sprima LLAVE_CERRADA','decFun',9,'p_decfun1','SintacticoPrueba.py',69),
  ('decTipos -> t_tipos','decTipos',1,'p_decTipos1','SintacticoPrueba.py',75),
  ('decTipos -> empty','decTipos',1,'p_decTipos2','SintacticoPrueba.py',80),
  ('t_tipos -> INT','t_tipos',1,'p_decT1','SintacticoPrueba.py',85),
  ('t_tipos -> BOOL','t_tipos',1,'p_decT2','SintacticoPrueba.py',90),
  ('t_tipos -> CHARS','t_tipos',1,'p_decT3','SintacticoPrueba.py',95),
  ('Sprima -> WHILE PARENTESIS_AB E PARENTESIS_CE LLAVE_ABIERTA sesese LLAVE_CERRADA','Sprima',7,'p_Sprima1','SintacticoPrueba.py',100),
  ('Sprima -> sesese','Sprima',1,'p_Sprima2','SintacticoPrueba.py',105),
  ('sesese -> ID ASIGNACION E PUNTO_Y_COMA','sesese',4,'p_S1','SintacticoPrueba.py',110),
  ('sesese -> ID ASIGNACION E','sesese',3,'p_Sinic','SintacticoPrueba.py',115),
  ('sesese -> IF PARENTESIS_AB E PARENTESIS_CE','sesese',4,'p_S2','SintacticoPrueba.py',120),
  ('sesese -> RETURN E PUNTO_Y_COMA','sesese',3,'p_S3','SintacticoPrueba.py',125),
  ('sesese -> WRITE PARENTESIS_AB B PARENTESIS_CE PUNTO_Y_COMA','sesese',5,'p_S4','SintacticoPrueba.py',130),
  ('sesese -> PROMPT PARENTESIS_AB ID PARENTESIS_CE PUNTO_Y_COMA','sesese',5,'p_S5','SintacticoPrueba.py',135),
  ('E -> E PLUS variable','E',3,'p_E1','SintacticoPrueba.py',140),
  ('E -> E MENOS variable','E',3,'p_E2','SintacticoPrueba.py',145),
  ('E -> E MENOR variable','E',3,'p_Emenor','SintacticoPrueba.py',152),
  ('E -> E MAYOR variable','E',3,'p_Emayor','SintacticoPrueba.py',157),
  ('variable -> ID','variable',1,'p_variable1','SintacticoPrueba.py',162),
  ('variable -> NUMERO','variable',1,'p_numbero1','SintacticoPrueba.py',166),
  ('E -> variable','E',1,'p_E3','SintacticoPrueba.py',170),
  ('t_tipos -> t_tipos AND Y','t_tipos',3,'p_E4','SintacticoPrueba.py',176),
  ('Y -> E','Y',1,'p_Y1','SintacticoPrueba.py',181),
  ('Y -> E COMA Y','Y',3,'p_Y2','SintacticoPrueba.py',186),
  ('Y -> empty','Y',1,'p_Y3','SintacticoPrueba.py',191),
  ('Y -> AUTO_INC Yprima','Y',2,'p_Y4','SintacticoPrueba.py',196),
  ('Yprima -> ID','Yprima',1,'p_Y5','SintacticoPrueba.py',202),
  ('Yprima -> ID PARENTESIS_AB B PARENTESIS_CE','Yprima',4,'p_Y6','SintacticoPrueba.py',207),
  ('B -> E','B',1,'p_B1','SintacticoPrueba.py',212),
  ('B -> E COMA B','B',3,'p_B2','SintacticoPrueba.py',217),
  ('B -> empty','B',1,'p_B3','SintacticoPrueba.py',222),
  ('empty -> <empty>','empty',0,'p_empty','SintacticoPrueba.py',227),
]
